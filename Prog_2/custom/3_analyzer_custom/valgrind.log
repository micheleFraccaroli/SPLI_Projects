==5234== Memcheck, a memory error detector
==5234== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==5234== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==5234== Command: ./analyzer
==5234== Parent PID: 3197
==5234== 
==5234== Use of uninitialised value of size 8
==5234==    at 0x400F24: main (in /home/nick/Programmazione/sicurezzainternet/prog2/analyzer_custom/analyzer)
==5234==  Uninitialised value was created by a stack allocation
==5234==    at 0x400EFA: main (in /home/nick/Programmazione/sicurezzainternet/prog2/analyzer_custom/analyzer)
==5234== 
==5234== Invalid write of size 4
==5234==    at 0x400F24: main (in /home/nick/Programmazione/sicurezzainternet/prog2/analyzer_custom/analyzer)
==5234==  Address 0x1 is not stack'd, malloc'd or (recently) free'd
==5234== 
==5234== 
==5234== Process terminating with default action of signal 11 (SIGSEGV)
==5234==  Access not within mapped region at address 0x1
==5234==    at 0x400F24: main (in /home/nick/Programmazione/sicurezzainternet/prog2/analyzer_custom/analyzer)
==5234==  If you believe this happened as a result of a stack
==5234==  overflow in your program's main thread (unlikely but
==5234==  possible), you can try to increase the size of the
==5234==  main thread stack using the --main-stacksize= flag.
==5234==  The main thread stack size used in this run was 8388608.
==5234== 
==5234== HEAP SUMMARY:
==5234==     in use at exit: 0 bytes in 0 blocks
==5234==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==5234== 
==5234== All heap blocks were freed -- no leaks are possible
==5234== 
==5234== For counts of detected and suppressed errors, rerun with: -v
==5234== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
